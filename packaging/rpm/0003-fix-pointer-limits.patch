diff -urN xf86-video-dummy-0.4.0.bak/src/dummy_driver.c xf86-video-dummy-0.4.0/src/dummy_driver.c
--- xf86-video-dummy-0.4.0.bak/src/dummy_driver.c	2022-04-06 10:54:34.951837933 +0700
+++ xf86-video-dummy-0.4.0/src/dummy_driver.c	2022-04-06 10:57:20.980932580 +0700
@@ -48,6 +48,9 @@
 #include "scrnintstr.h"
 #include "servermd.h"
 
+/* Needed for fixing pointer limits on resize */
+#include "inputstr.h"
+
 /* Mandatory functions */
 static const OptionInfoRec *	DUMMYAvailableOptions(int chipid, int busid);
 static void     DUMMYIdentify(int flags);
@@ -1000,6 +1003,26 @@
         RRTellChanged(pScrn->pScreen);
     }
 #endif
+    //ensure the screen dimensions are also updated:
+    pScrn->pScreen->width = mode->HDisplay;
+    pScrn->pScreen->height = mode->VDisplay;
+    pScrn->virtualX = mode->HDisplay;
+    pScrn->virtualY = mode->VDisplay;
+    pScrn->frameX1 = mode->HDisplay;
+    pScrn->frameY1 = mode->VDisplay;
+
+    //ensure the pointer uses the new limits too:
+    DeviceIntPtr pDev;
+    SpritePtr pSprite;
+    for (pDev = inputInfo.devices; pDev; pDev = pDev->next) {
+        if (pDev->spriteInfo!=NULL && pDev->spriteInfo->sprite!=NULL) {
+            pSprite = pDev->spriteInfo->sprite;
+            pSprite->hotLimits.x2 = mode->HDisplay;
+            pSprite->hotLimits.y2 = mode->VDisplay;
+            pSprite->physLimits.x2 = mode->HDisplay;
+            pSprite->physLimits.y2 = mode->VDisplay;
+        }
+    }
     return TRUE;
 }
 
